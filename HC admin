--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==1) then v21=function(v31,v32,v33)if v33 then local v73=1973 -(718 + 1255) ;local v74;while true do if (v73==(0 -(0 + 0))) then v74=(v31/((6 -4)^(v32-1)))%((1 + 1)^(((v33-1) -(v32-(1060 -(653 + 406)))) + 1 + 0)) ;return v74-(v74%(724 -(15 + 85 + 623))) ;end end else local v75=(2 + 0)^(v32-(4 -3)) ;return (((v31%(v75 + v75))>=v75) and (2 -1)) or 0 ;end end;v22=nil;v22=function()local v39=v1(v16,v19,v19);v19=v19 + 1 ;return v39;end;v23=nil;v18=2;end if (v18==3) then v25=function()local v40=0 + 0 ;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v40==(0 + 0)) then v41=v24();v42=v24();v40=628 -(270 + 357) ;end if (v40==(2 + 0)) then v45=v21(v42,100 -79 ,937 -((1137 -635) + 404) );v46=((v21(v42,583 -(443 + 108) )==(1 + 0)) and  -1) or (1016 -(858 + 134 + 23)) ;v40=5 -2 ;end if (v40==(1 -0)) then v43=464 -(386 + (243 -166)) ;v44=(v21(v42,(327 + 51) -((766 -460) + 71) ,28 -8 ) * ((5 -3)^(1063 -(482 + 549)))) + v41 ;v40=1 + 1 ;end if (v40==(2 + 1)) then if (v45==(0 -0)) then if (v44==(0 + 0)) then return v46 * 0 ;else local v103=0 + 0 ;while true do if (v103==(0 -0)) then v45=1155 -(782 + 372) ;v43=0 + 0 ;break;end end end elseif (v45==(3585 -1538)) then return ((v44==0) and (v46 * ((1 + 0 + 0)/(1102 -(408 + 694))))) or (v46 * NaN) ;end return v8(v46,v45-((1458 -(459 + 247)) + 271) ) * (v43 + (v44/((1090 -(966 + 122))^52))) ;end end end;v26=nil;v26=function(v34)local v47=0 + (0 -0) ;local v48;local v49;while true do if (v47==(349 -((470 -209) + (199 -111)))) then v48=nil;if  not v34 then local v94=0;while true do if (v94==(0 + 0)) then v34=v24();if (v34==(910 -(694 + 216))) then return "";end break;end end end v47=1;end if (v47==(1 + 2 + 0)) then return v6(v49);end if (v47==(1 + 0)) then v48=v3(v16,v19,(v19 + v34) -(1 + 0) );v19=v19 + v34 ;v47=(598 -(513 + 84)) + 1 ;end if (v47==(2 + 0)) then v49={};for v92=713 -(604 + 108) , #v48 do v49[v92]=v2(v1(v3(v48,v92,v92)));end v47=5 -2 ;end end end;v27=v24;v18=4;end if (0==v18) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v35)if (v1(v35,2)==79) then v20=v0(v3(v35,1,1));return "";else local v76=0;local v77;while true do if (v76==0) then v77=v2(v0(v35,16));if v20 then local v104=v5(v77,v20);v20=nil;return v104;else return v77;end break;end end end end);v21=nil;v18=1;end if (v18==2) then v23=function()local v50,v51=v1(v16,v19,v19 + (5 -3) );v19=v19 + (5 -3) ;return (v51 * (760 -504)) + v50 ;end;v24=nil;v24=function()local v52,v53,v54,v55=v1(v16,v19,v19 + 3 );v19=v19 + 4 ;return (v55 * (16777818 -(538 + 64))) + (v54 * (42579 + 22957)) + (v53 * (753 -497)) + v52 ;end;v25=nil;v18=3;end if (v18==4) then v28=nil;v28=function(...)return {...},v12("#",...);end;v29=nil;v29=function()local v56=1493 -(986 + 507) ;local v57;local v58;local v59;local v60;local v61;local v62;local v63;local v64;while true do if (v56~=(2 -1)) then else v59=nil;v60=nil;v56=1 + 1 ;end if (3==v56) then v63=nil;v64=nil;v56=4;end if (v56==(1221 -(336 + 883))) then v61=nil;v62=nil;v56=3;end if (v56==(1 + 3)) then while true do if (v57~=(411 -(125 + 284))) then else local v99=0 -0 ;while true do if (v99~=(1355 -(366 + 989))) then else v62=nil;v63=nil;v99=1;end if (v99==1) then v57=3;break;end end end if (v57==(3 + 0)) then v64=nil;while true do local v105=0 + 0 ;local v106;while true do if (v105==(1244 -(800 + 444))) then v106=0 + 0 ;while true do if (v106==1) then if ((1189 -(1129 + 59))==v58) then local v112=0;local v113;while true do if (0==v112) then v113=1625 -(75 + 1550) ;while true do if (v113==(583 -(288 + 295))) then local v168=0;while true do if (v168==0) then v62={v59,v60,nil,v61};v63=v24();v168=1;end if (v168==(1 + 0)) then v113=103 -(54 + 48) ;break;end end end if (v113==1) then v64={};v58=1450 -(36 + 1412) ;break;end end break;end end end if (v58==0) then local v114=915 -(626 + 289) ;local v115;while true do if (v114==0) then v115=577 -(341 + 236) ;while true do if (v115~=0) then else local v169=1016 -(928 + 88) ;local v170;while true do if (v169==0) then v170=0;while true do if (v170==(0 -0)) then local v246=0 -0 ;while true do if ((560 -(489 + 70))==v246) then v170=1 -0 ;break;end if (v246==0) then v59={};v60={};v246=1 -0 ;end end end if (v170~=1) then else v115=102 -(27 + 74) ;break;end end break;end end end if (v115==(1872 -(264 + 1607))) then v61={};v58=1;break;end end break;end end end break;end if (v106~=(0 -0)) then else local v111=0 -0 ;while true do if (v111==0) then if ((506 -(38 + 465))==v58) then local v116=0;local v117;while true do if (v116==(1422 -(616 + 806))) then v117=0 + 0 ;while true do local v215=0 + 0 ;while true do if (0==v215) then if (v117==(1235 -(729 + 506))) then for v261=1,v24() do v60[v261-1 ]=v29();end for v263=670 -(441 + 228) ,v24() do v61[v263]=v24();end v117=1 -0 ;end if (v117==1) then return v62;end break;end end end break;end end end if ((73 -(51 + 20))==v58) then local v118=0;local v119;local v120;while true do if ((0 + 0)~=v118) then else v119=0 -0 ;v120=nil;v118=1;end if (v118~=1) then else while true do if ((0 -0)~=v119) then else v120=0;while true do if (v120==(1 + 0)) then for v265=1,v24() do local v266=70 -(23 + 47) ;local v267;local v268;local v269;while true do if (v266==0) then local v299=688 -(121 + 567) ;while true do if (v299~=(305 -(99 + 206))) then else v267=0;v268=nil;v299=1 -0 ;end if (v299==(1687 -(1034 + 652))) then v266=1;break;end end end if (v266~=1) then else v269=nil;while true do if (v267==(1 -0)) then while true do if ((1462 -(41 + 1421))==v268) then v269=v22();if (v21(v269,1,1)~=(0 + 0)) then else local v344=0;local v345;local v346;local v347;while true do if (v344==(6 -3)) then if (v21(v346,3,3)~=1) then else v347[1 + 3 ]=v64[v347[4]];end v59[v265]=v347;break;end if (v344==(4 -2)) then if (v21(v346,3 -2 ,1)==(1 + 0)) then v347[2]=v64[v347[2]];end if (v21(v346,2,1 + 1 )==(2000 -(651 + 1348))) then v347[7 -4 ]=v64[v347[3]];end v344=3;end if (v344~=1) then else local v356=0 -0 ;while true do if (v356~=(0 + 0)) then else v347={v23(),v23(),nil,nil};if (v345==(452 -(261 + 191))) then local v369=0;local v370;while true do if (0==v369) then v370=0 + 0 ;while true do if (v370~=(0 + 0)) then else v347[748 -(93 + 652) ]=v23();v347[4]=v23();break;end end break;end end elseif (v345==(1599 -(1137 + 461))) then v347[1 + 2 ]=v24();elseif (v345==(1 + 1)) then v347[3]=v24() -((187 -(16 + 169))^16) ;elseif (v345~=3) then else local v379=0;local v380;while true do if (v379~=0) then else v380=0 + 0 ;while true do if (0~=v380) then else v347[3]=v24() -(2^16) ;v347[898 -(782 + 112) ]=v23();break;end end break;end end end v356=1;end if (v356==(2 -1)) then v344=2;break;end end end if (v344~=(0 -0)) then else local v357=0;while true do if (v357~=0) then else local v367=0 + 0 ;while true do if (v367==0) then v345=v21(v269,5 -3 ,7 -4 );v346=v21(v269,4,28 -22 );v367=401 -(330 + 70) ;end if (v367==1) then v357=2 -1 ;break;end end end if (v357~=(18 -(12 + 5))) then else v344=1;break;end end end end end break;end end break;end if (v267~=0) then else local v312=1533 -(1450 + 83) ;local v313;while true do if (v312==0) then v313=0 -0 ;while true do if (v313~=1) then else v267=1213 -(853 + 359) ;break;end if (v313==(0 -0)) then local v350=0;while true do if ((0 + 0)~=v350) then else v268=0 -0 ;v269=nil;v350=1;end if (v350~=1) then else v313=1;break;end end end end break;end end end end break;end end end v58=3;break;end if (v120~=(0 + 0)) then else local v247=0;local v248;while true do if (v247==0) then v248=0;while true do if (v248==(0 -0)) then local v306=0 -0 ;while true do if (v306==(61 -(47 + 13))) then v248=3 -2 ;break;end if (v306~=(0 + 0)) then else for v327=1,v63 do local v328=0 -0 ;local v329;local v330;local v331;local v332;local v333;while true do if (v328~=0) then else v329=0 -0 ;v330=nil;v328=1 + 0 ;end if ((1 + 0)==v328) then v331=nil;v332=nil;v328=2;end if (2==v328) then v333=nil;while true do if (v329==(7 -5)) then while true do if (v330~=1) then else v333=nil;while true do if (v331~=0) then else local v372=0;while true do if (1==v372) then v331=422 -(322 + 99) ;break;end if (v372~=0) then else local v375=1862 -(135 + 1727) ;local v376;while true do if ((0 + 0)==v375) then v376=0 -0 ;while true do if (v376~=0) then else local v381=595 -(278 + 317) ;while true do if (v381~=0) then else v332=v22();v333=nil;v381=1;end if ((2 -1)~=v381) then else v376=4 -3 ;break;end end end if (v376~=(3 -2)) then else v372=1;break;end end break;end end end end end if (v331~=(87 -(80 + 6))) then else if (v332==1) then v333=v22()~=0 ;elseif (v332==2) then v333=v25();elseif (v332==(8 -5)) then v333=v26();end v64[v327]=v333;break;end end break;end if (v330==0) then local v368=0 -0 ;while true do if (v368==0) then v331=0;v332=nil;v368=1 + 0 ;end if (v368==(1 -0)) then v330=1;break;end end end end break;end if (0~=v329) then else local v358=0;while true do if (v358==1) then v329=1;break;end if (v358==(0 + 0)) then v330=0;v331=nil;v358=1;end end end if (v329~=1) then else local v359=0;while true do if (v359==(1 + 0)) then v329=1174 -(691 + 481) ;break;end if (v359==(271 -(14 + 257))) then v332=nil;v333=nil;v359=1269 -(1151 + 117) ;end end end end break;end end end v62[3]=v22();v306=1;end end end if (v248~=(1861 -(277 + 1583))) then else v120=1;break;end end break;end end end end break;end end break;end end end v111=1267 -(209 + 1057) ;end if (v111==1) then v106=1892 -(1377 + 514) ;break;end end end end break;end end end break;end if (v57==1) then local v100=0;local v101;while true do if (v100~=0) then else v101=0;while true do if (v101==0) then local v108=0;while true do if (v108==1) then v101=1 + 0 ;break;end if ((0 + 0)~=v108) then else v60=nil;v61=nil;v108=1 + 0 ;end end end if (v101==1) then v57=2 + 0 ;break;end end break;end end end if ((294 -(76 + 218))==v57) then local v102=0;while true do if (v102==(2 -1)) then v57=2 -1 ;break;end if (v102~=(0 -0)) then else v58=0 + 0 ;v59=nil;v102=1;end end end end break;end if (v56==0) then v57=0;v58=nil;v56=3 -2 ;end end end;v18=5;end if (v18==5) then v30=nil;v30=function(v36,v37,v38)local v65=v36[1];local v66=v36[2];local v67=v36[3];return function(...)local v68=1;local v69= -1;local v70={...};local v71=v12("#",...) -1 ;local function v72()local v78=v65;local v79=v66;local v80=v67;local v81=v28;local v82={};local v83={};local v84={};for v88=0 + (1656 -(1519 + 137)) ,v71 do if ((v88>=v80) or ((2379 -(321 + 14))==(4833 -(59 + 39 + 457)))) then v82[v88-v80 ]=v70[v88 + (3 -2) ];else v84[v88]=v70[v88 + (837 -(763 + 73)) ];end end local v85=(v71-v80) + 1 + 0 ;local v86;local v87;while true do local v89=0 -0 ;local v90;while true do if (((1028 -(149 + 11))>(2277 -((388 -(39 + 65)) + 1602))) and (v89==(0 + 0))) then v90=1874 -(1798 + (187 -111)) ;while true do if ((v90==(276 -(57 + 219))) or ((1227 + 480)>=(7963 -5833))) then local v107=0 -0 ;while true do if ((v107==(1 + 0 + 0)) or ((4056 -(435 + 1247))>=(4674 -(732 + 34)))) then v90=1014 -(534 + 62 + 417) ;break;end if ((v107==(921 -(470 + 451))) or ((6084 -(328 + 1314))<=(4159 -(8 + (1063 -560))))) then v86=v78[v68];v87=v86[228 -(105 + 57 + 65) ];v107=1 -0 ;end end end if ((v90==(1 -0)) or ((12213 -7999)<=(3874 + 89))) then if (((94 -73)<(4771 -(209 + 145))) and (v87<=(1 + 5 + 14))) then if (((1095 -758)<=(7700 -6056)) and (v87<=(747 -(284 + 454)))) then if (((4983 -(246 + 46 + 143 + 0))>(544 + 1065)) and (v87<=(815 -(439 + 213 + 159)))) then if (((2116 -(717 + (679 -522)))==(5527 -4285)) and (v87<=((1109 -(678 + 430)) + 0))) then if ((4915>=(3800 + 916)) and (v87==(0 -0))) then local v121=0 + 0 + 0 ;local v122;while true do if ((v121==(1035 -(446 + 589))) or ((2456 -(790 + 291))>=(3594 + 70 + 280))) then v122=v86[625 -(211 + 343 + 69) ];v84[v122](v84[v122 + (3 -(1060 -(512 + 546))) ]);break;end end else local v123=0 -0 ;local v124;local v125;local v126;local v127;local v128;local v129;local v130;while true do if (((11184 -6627)>=(1006 -431)) and (v123==(0 + (532 -(162 + 370))))) then v124=0 -0 ;v125=nil;v123=1307 -(157 + 118 + 1031) ;end if ((v123==(174 -((187 -112) + 97))) or ((3995 -(9 + 1121 + 425))==(117 + 3985))) then v128=nil;v129=nil;v123=2 + 1 ;end if ((v123==(1 + 0)) or ((1843 + 3153)<=(2372 + 120))) then v126=nil;v127=nil;v123=1 + 1 ;end if ((v123==(3 + (934 -(706 + 228)))) or ((1412 -(14 + 89))==(6445 -4093))) then v130=nil;while true do if (((2584 + 893)>=(1254 + 328)) and (v124==((7 -5) + 0))) then local v235=0 + (1384 -(884 + 500)) ;while true do if ((v235==(0 -0)) or ((4394 -2776)==(5230 -3606))) then v129=nil;v130=nil;v235=1 + 0 + 0 ;end if (((1 + 0)==v235) or (((3000 -(152 + 1137)) + 725)>(11747 -9013))) then v124=1 + 2 ;break;end end end if (((1054 -(748 + 303))==v124) or ((732 + 3625)<(4275 -1392))) then while true do if ((((3140 -1783) -(400 + 805))<=(1509 + 3356)) and ((1 + 0)==v125)) then local v270=0 -0 ;while true do if (((0 -0)==v270) or ((721 -369)>=(4896 -(432 + 230)))) then local v300=0 + 0 ;while true do if ((v300==(939 -(309 + 629))) or ((2512 -(662 + 125))>=(286 + 2822))) then v270=1 + (0 -0) ;break;end if ((v300==(48 -(31 + 17))) or ((2416 + 479)==((3833 -(286 + 431)) -(395 + 194)))) then v128=v126 + (819 -(690 + 127)) ;v129={v84[v126](v84[v126 + (1 -0) + 0 ],v84[v128])};v300=338 -(67 + 270) ;end end end if ((v270==(2 -1)) or ((7084 -4611)<(705 + 616))) then v125=186 -((798 -(435 + 263)) + 84) ;break;end end end if ((((3930 -(730 + 491)) -(464 + 190))<(4350 -(854 + 166))) and (v125==(1 + 2))) then if (((2309 -(147 + 387))<(49 + 2959)) and v130) then local v296=0 -0 ;local v297;while true do if (((1064 + 1012)>(2860 -(630 + 1216))) and (((1583 -(385 + 1198)) + 0)==v296)) then v297=0 + 0 ;while true do if ((((10087 -7109) + 971)<(12862 -8353)) and (v297==(1800 -(520 + 1280)))) then v84[v128]=v130;v68=v86[53 -(38 + 12) ];break;end end break;end end else v68=v68 + (1 -0) ;end break;end if (((15 + 3643)<(5628 -(162 + 1769))) and (v125==(592 -((2027 -(934 + 975)) + 474)))) then local v271=1663 -((3668 -2695) + 389 + 301) ;local v272;while true do if ((v271==(0 + 0)) or ((581 + 3333)==203)) then v272=0 + 0 ;while true do if ((v272==(54 -(26 + 28))) or ((3961 -(60 + 1396))<(2519 -1693))) then local v314=1441 -(72 + 1369) ;while true do if ((v314==(0 + 0)) or ((3385 -((1608 -812) + 1027))<=(1828 -(400 + 5 + 10)))) then v126=v86[8 -6 ];v127=v86[6 -2 ];v314=45 -(30 + 14) ;end if (((6169 -(3002 -(27 + 7)))==(7184 -3983)) and (v314==(2 -1))) then v272=1162 -(207 + (2333 -(821 + 558))) ;break;end end end if (((5219 -(870 + 1109))>=(2763 -(234 + 455))) and ((1593 -(335 + 1257))==v272)) then v125=2 -1 ;break;end end break;end end end if ((2238<(3239 -(188 + 43 + 459))) and (v125==(4 -2))) then local v273=0 -0 ;local v274;while true do if ((v273==(0 -0)) or ((3677 -(64 + 23))>=(1319 + 3320))) then v274=0 -0 ;while true do if (((1716 -(490 + 1226))==v274) or ((53 + 193 + 1495)>(141 + 464 + 1419))) then local v315=(0 -0) + 0 ;while true do if (((596 -((2048 -(1809 + 52)) + 408))==v315) or ((3387 + 1475)<=(4683 -(706 + 284)))) then v274=2 -1 ;break;end if ((v315==0) or ((14508 -10025)<(1980 -(379 + (2864 -(902 + 436)))))) then for v340=1 + 0 ,v127 do v84[v128 + v340 ]=v129[v340];end v130=v129[1];v315=3 -2 ;end end end if (((1117 + 3185)>=((6263 -(837 + 106)) -1389)) and ((1 -0)==v274)) then v125=7 -4 ;break;end end break;end end end end break;end if ((((11421 -6352) -3655)<(455 + 1774)) and (v124==(0 + 0))) then local v236=0 + 0 ;while true do if ((v236==(190 -(184 + 6))) or ((1639 + 2505)>=(983 + 3437))) then v125=0 + 0 ;v126=nil;v236=1;end if (((291 -(256 + 34))<((3359 -(10 + 2)) -(491 + 909))) and (v236==(1 + 0))) then v124=1 + 0 + 0 ;break;end end end if ((v124==(1 + 0)) or ((4951 -833)<=(698 + 565))) then v127=nil;v128=nil;v124=141 -(124 + 15) ;end end break;end end end elseif (((1364 -(46 + 1))>(380 + 62)) and (v87<=(1 + 1))) then local v131=187 -(13 + 174) ;local v132;local v133;local v134;while true do if (((529 + 581)==(2504 -1394)) and (v131==(0 + 0))) then v132=0 + 0 ;v133=nil;v131=1 + 0 ;end if (((5432 -(435 + 1412))>=(10114 -(7782 -(135 + 331)))) and (v131==(607 -((1047 -(866 + 40)) + (1466 -1001))))) then v134=nil;while true do if ((v132==((3250 -1948) -(644 + 657))) or ((1837 + 2550)<(1949 + 1989))) then v84[v133 + (1 -0) ]=v134;v84[v133]=v134[v86[1106 -(196 + 906) ]];break;end if ((v132==(0 -0)) or ((2092 + 1325)<=(10780 -7447))) then v133=v86[1 + 1 ];v134=v84[v86[4 -1 ]];v132=2 -(1 + 0) ;end end break;end end elseif (((3690 -2143)<=((4217 -(31 + 4)) -(16 + 1969))) and (v87==(604 -(32 + 569)))) then v84[v86[2 + 0 ]]=v38[v86[8 -5 ]];else local v173=0 + 0 ;local v174;while true do if (((447 + 3708)>(2473 -(1422 + 271))) and (v173==(0 + 0))) then v174=v86[2 + 0 ];v84[v174]=v84[v174](v13(v84,v174 + (617 -(476 + 140)) ,v86[1802 -(10 + 150 + 1639) ]));break;end end end elseif (((1846 -(317 + 249))<=(290 + 3749)) and (v87<=(12 -6))) then if (((15881 -11695)>=(1860 + 500)) and (v87>(2 + 3))) then v84[v86[(1326 -(496 + 828)) + 0 ]]= #v84[v86[1478 -(808 + 667) ]];else for v166=v86[1114 -(974 + 138) ],v86[1991 -(1938 + (88 -38)) ] do v84[v166]=nil;end end elseif ((v87<=(393 -(152 + 234))) or ((3811 -(564 + 403))<1852)) then local v136=0 -0 ;local v137;local v138;local v139;while true do if (((1969 -(996 + 973))==v136) or ((1578 + 2489)>=(2397 + 1944))) then local v217=0 -0 ;while true do if (((5413 -(242 + 623))>(2 + 3546 + 297)) and (v217==(0 + 0 + 0))) then v137=0 -0 ;v138=nil;v217=684 -(632 + 51) ;end if (((1936 -(339 + 1596))==v217) or (((2949 + 5344) -4639)<=(1915 -1130))) then v136=2 -1 ;break;end end end if ((v136==(1171 -(335 + 835))) or ((1395 -(518 + 182))==((1347 + 1651) -(156 + 393)))) then v139=nil;while true do if ((((9035 -(299 + 558)) -3625)>=(1036 + 3223)) and (v137==(0 -0))) then local v242=0;while true do if (((2 -1)==v242) or ((1417 -703)>(6079 -1339))) then v137=128 -(85 + 42) ;break;end if (((972 + 2614)>(3002 -(332 + 824))) and (v242==(0 -0))) then local v275=0 -0 ;while true do if (((12627 -9361)<(11702 -8093)) and (0==v275)) then v138=v86[1490 -(1462 + 25) ];v139=v84[v138];v275=1 -0 ;end if ((((3137 -(227 + 1178)) + 1476)<=(7341 -3983)) and (v275==(3 -2))) then v242=456 -(146 + 309) ;break;end end end end end if ((((10627 -6747) -(667 + 714))>(2730 -(1095 + 32))) and (v137==(1 + 0))) then for v245=v138 + (4 -3) ,v86[15 -11 ] do v139=v139   .. v84[v245] ;end v84[v86[3 -1 ]]=v139;break;end end break;end end elseif (((3246 -(22 + 127))<=(11085 -(9357 -3152))) and (v87==(4 + 4))) then do return;end else v84[v86[1738 -(8 + 1728) ]]={};end elseif (((1290 + 1471)<=(1824 + 1077)) and (v87<=(1250 -(143 + 1093)))) then if (((3089 + 1178)==(4086 + 181)) and (v87<=(42 -(28 + 3)))) then if (((362 + 50)<(3311 -(148 + 106))) and (v87>(1353 -(261 + 1082)))) then v84[v86[2]]=v86[3 -0 ];else local v142=0 + (1255 -(485 + 770)) ;local v143;local v144;local v145;while true do if ((((6674 -4421) + 1014 + 290)>=(2393 -1265)) and (v142==(2 -1))) then v145=457 -(121 + 336) ;for v222=v143,v86[4] do local v223=0 + 0 ;local v224;while true do if ((v223==(0 + 0)) or ((3277 + 442)<(5154 -3733))) then v224=0 -0 ;while true do if (((2668 + (6556 -4340))>=(764 -(90 + 200))) and (v224==(0 + 0 + 0))) then v145=v145 + (1304 -(437 + 866)) ;v84[v222]=v144[v145];break;end end break;end end end break;end if (((3392 -2612)==780) and (v142==(0 + 0))) then local v218=1490 -(575 + 727 + 188) ;while true do if ((v218==(1811 -(126 + 1685))) or ((2031 + 1598)<(8563 -5989))) then v143=v86[6 -4 ];v144={v84[v143](v13(v84,v143 + (1650 -(1598 + 51)) ,v69))};v218=1375 -((1396 -(1145 + 217)) + 1340) ;end if ((v218==(1 + 0)) or ((1876 + 608)==(520 -205))) then v142=1 + 0 ;break;end end end end end elseif ((v87<=(1014 -(230 + 772))) or ((14816 -9853)==((60087 -46483) -9970))) then local v146=0 + (885 -(715 + 170)) ;local v147;while true do if (((0 + 0)==v146) or ((2138 -(512 + 1156))==(3686 -720))) then v147=v86[1 + 1 ];v84[v147]=v84[v147](v84[v147 + ((435 + 662) -(860 + (796 -560))) ]);break;end end elseif ((v87==(12 + 1)) or ((1635 -478)>=(934 + 433))) then v84[v86[6 -4 ]]=v86[12 -9 ]~=((1023 -(55 + 968)) -0) ;else local v177=0 -0 ;local v178;local v179;local v180;local v181;local v182;while true do if (((3057 -((1714 -(587 + 162)) + 138))<(4406 -(657 + 1196))) and (v177==(5 -3))) then v182=nil;while true do if ((v178==(0 -0)) or ((1170 -(152 + 310))<(852 -(206 + 402)))) then v179=v86[1 + 1 ];v180,v181=v81(v84[v179](v13(v84,v179 + ((2041 -(55 + 3)) -((2722 -(589 + 357)) + 96 + 110)) ,v86[9 -(5 + 1) ])));v178=1 + 0 ;end if (((5407 -(1642 + 206))>=(711 -149)) and (v178==(958 -(561 + 395)))) then for v276=v179,v69 do local v277=1814 -(1656 + 158) ;local v278;while true do if (((4653 -((718 -(610 + 48)) + (3077 -(800 + 1083))))>(7325 -(4182 + 518))) and (v277==(1042 -(205 + 190 + 647)))) then v278=1074 -(144 + 930) ;while true do if (((289 + 1099)<(3320 + (4316 -2903))) and (v278==(0 -0))) then v182=v182 + (2 -1) ;v84[v276]=v180[v182];break;end end break;end end end break;end if ((v178==(1 + 0)) or ((6553 -2079)<(2564 -(519 + 1200)))) then v69=(v181 + v179) -(2 -1) ;v182=0 -0 ;v178=7 -5 ;end end break;end if (((3296 -(788 + 851))==(893 + 764)) and (v177==((1702 -(736 + 964)) -1))) then v180=nil;v181=nil;v177=153 -(8 + (203 -60)) ;end if (((6041 -(466 + 690))>(161 + 240)) and (v177==(0 + 0))) then v178=0 -0 ;v179=nil;v177=1162 -(423 + 738) ;end end end elseif ((v87<=(11 + 6)) or ((14 + 24 + (943 -(355 + 11)))>((5700 -1691) -1245))) then if (((3950 -2824)==(420 + 150 + 556)) and (v87<=15)) then if ((((4515 + 516) -(791 + 355))==(3220 + 172 + 493)) and (v86[2]==v84[v86[(664 -(76 + 580)) -4 ]])) then v68=v68 + (1 -(1026 -(501 + 525))) ;else v68=v86[3];end elseif ((v87>(31 -(36 -21))) or ((1150 -546)<=(2211 -(1325 + 406)))) then local v184=0 -0 ;local v185;local v186;while true do if (((627 -(458 + 169))==v184) or ((2100 -(586 + 36 + 78))==2861)) then v185=(510 + 674) -(359 + 825) ;v186=nil;v184=1 + 0 ;end if (((11816 -7267)>(3102 -(867 + 380))) and (v184==(1 + 0))) then while true do if ((v185==((1251 -(448 + 803)) + 0)) or ((4688 -(282 + 485))>((6434 -(92 + 1529)) -(14 + (1143 -(391 + 419)))))) then v186=v86[3 -1 ];v84[v186]=v84[v186](v13(v84,v186 + ((2 + 0) -1) ,v69));break;end end break;end end else v84[v86[2 -0 ]]=v84[v86[4 -1 ]] + v86[1 + 3 ] ;end elseif ((v87<=(1950 -(1606 + 326))) or ((3057 -(338 + 1603))>=(5801 -3793))) then v84[v86[2 -(0 + 0) ]]=v84[v86[3 + 0 ]][v86[2 + 1 + 1 ]];elseif ((v87>(38 -(3 + 16))) or ((15510 -10964)==(6264 -(686 + 1231)))) then v84[v86[1789 -(822 + 965) ]][v86[903 -(838 + 62) ]]=v86[8 -4 ];else v84[v86[1 + 1 ]]=v84[v86[3 + 0 ]] + v84[v86[3 + 1 ]] ;end elseif ((v87<=(68 -37)) or ((47 + 3692)<(6849 -5268))) then if ((v87<=(188 -(11 + (1942 -(1226 + 564))))) or ((2157 + 258)==(5009 -(224 + 136)))) then if ((v87<=(54 -32)) or ((5995 -(109 + 977))<(3022 -(376 + 216 + (1451 -(262 + 567)))))) then if ((v87>(17 + 4)) or ((511 + 692)>(4863 -(759 + 239)))) then v37[v86[5 -2 ]]=v84[v86[2]];elseif ((v84[v86[2 -0 ]]~=v86[13 -9 ]) or ((3901 -(498 + 1284))<=(1019 -(391 + 522)))) then v68=v68 + 1 + 0 ;else v68=v86[1 + 2 ];end elseif ((v87<=(1998 -(108 + 1867))) or ((17946 -14120)<(4732 -3357))) then local v152=(1686 -(884 + 229)) -(182 + 391) ;local v153;local v154;while true do if ((v152==(0 + 0)) or (((2739 -1349) + 1712)<(2129 -(156 + 819)))) then v153=v86[2 -0 ];v154={};v152=1 -0 ;end if (((3462 -(942 + 157))<((815 -582) + 4741)) and (v152==(1 -(0 -0)))) then for v225=144 -(104 + 39) , #v83 do local v226=0 + 0 + 0 ;local v227;local v228;local v229;while true do if (((931 -(393 + 537))==v226) or ((1045 + 1203)<=(1738 -(84 + 1034)))) then v229=nil;while true do if ((v227==(3 -(5 -3))) or ((3169 -(1254 + 99))<(407 + 1163))) then while true do if ((v228==(0 -0)) or ((2239 -(577 + 938))==(4518 -((361 -210) + 556)))) then v229=v83[v225];for v307=(233 -(65 + 168)) -0 , #v229 do local v308=(1026 -(255 + 771)) + 0 ;local v309;local v310;local v311;while true do if ((v308==(598 -(379 + 219))) or ((2325 -(912 + 111))==1140)) then v309=v229[v307];v310=v309[1 -0 ];v308=535 -(531 + 3) ;end if ((v308==1) or ((819 -(189 + 449))>=(3501 -(160 + (1792 -(57 + 1683)))))) then v311=v309[2 + 0 ];if (((v310==v84) and (v311>=v153)) or ((3498 -1542)==(700 + 712))) then local v343=0;while true do if (((1453 + 1314)>=(10610 -7893)) and (v343==(0 -0))) then v154[v311]=v310[v311];v309[1956 -(1081 + 874) ]=v154;break;end end end break;end end end break;end end break;end if (((0 -0)==v227) or ((10264 -6438)<=(2556 -(266 + (1736 -(633 + 1041)))))) then local v295=1706 -(640 + 1066) ;while true do if ((v295==0) or ((6159 -2907)<(3220 -(687 + 97)))) then v228=(0 -0) -0 ;v229=nil;v295=3 -2 ;end if ((((19992 -7901) -9611)>=(1662 -(19 + 506))) and (v295==(1002 -(526 + 475)))) then v227=2 -1 ;break;end end end end break;end if (((1255 + 1771)>=(6681 -4184)) and (v226==(0 -0))) then v227=(2718 -(809 + 393)) -(616 + 900) ;v228=nil;v226=1261 -(358 + 902) ;end end end break;end end elseif ((1379<=(1473 + 1014)) and (v87==(11 + (27 -(6 + 8))))) then local v192=0 -0 ;local v193;local v194;while true do if (((29 + 4 + 17 + 1202)>(2691 -(262 + 1521))) and (((0 -0) + 0)==v192)) then v193=0 -0 ;v194=nil;v192=3 -2 ;end if (((5209 -3549)>(73 + 1562)) and (v192==(1 -0))) then while true do if (((942 -(290 + 237))<(214 + (974 -658))) and ((0 -0)==v193)) then v194=v86[1 + 1 ];v84[v194]=v84[v194]();break;end end break;end end else local v195=0 -0 ;local v196;local v197;local v198;local v199;while true do if ((v195==((1 + 1) -1)) or ((142 -43)==((1344 + 3996) -(907 + 404)))) then v198=nil;v199=nil;v195=3 -1 ;end if (((1723 + 101)<=(1021 + 2522)) and (v195==(509 -(385 + 124)))) then v196=0 + 0 ;v197=nil;v195=935 -((2370 -(358 + 1330)) + 252) ;end if ((v195==(5 -3)) or ((521 + 227)<(538 -(54 + 36)))) then while true do if (((5348 -3351)>=(7007 -5322)) and (v196==1)) then v199={};v198=v10({},{__index=function(v254,v255)local v279=1941 -(1896 + (1320 -(113 + 1162))) ;local v280;local v281;while true do if ((v279==(1 + (901 -(645 + 256)))) or ((10099 -8063)==(2310 -(40 + 142)))) then while true do if ((v280==(0 + 0)) or ((1792 + 2232)<=(2582 -(473 + 389)))) then local v318=0 + 0 ;while true do if ((v318==(0 + 0)) or ((3231 -(136 + 333))>(5263 -(404 + 302)))) then v281=v199[v255];return v281[2 -1 ][v281[2]];end end end end break;end if ((v279==((1445 -(1276 + 169)) + 0)) or ((11699 -8589)<(2124 -(581 + 623)))) then v280=0 + 0 ;v281=nil;v279=3 -2 ;end end end,__newindex=function(v254,v255,v256)local v282=(1492 -451) -(657 + (1223 -(364 + 475))) ;local v283;while true do if ((v282==((0 + 0) -0)) or ((134 + 149 + 126)>=(1846 -652))) then v283=v199[v255];v283[1 + 0 + 0 ][v283[1 + 1 ]]=v256;break;end end end});v196=2 + 0 ;end if (((4934 -(409 + 834))==(551 + 3140)) and (v196==(5 -3))) then for v284=1 + 0 ,v86[3 + 1 ] do local v285=0;local v286;local v287;local v288;while true do if ((v285==(0 -0)) or ((3830 + 563)<(294 + 1669))) then v286=0 -0 ;v287=nil;v285=1 + 0 ;end if (((2187 -610)<((10044 -3906) -4360)) and (v285==((1748 -(10 + 1736)) -1))) then v288=nil;while true do if (((2726 -2068)<(6338 -(3550 -(90 + 15)))) and ((1590 -(1260 + 329))==v286)) then while true do if (((947 -435)>=(169 -86)) and (v287==(1 -(0 -0)))) then if ((v288[1 + 0 ]==(746 -(93 + 621))) or ((1064 + 226)>=(5443 -(1194 + (469 -336))))) then v199[v284-(1 + 0) ]={v84,v288[3 + 0 ]};else v199[v284-(1420 -(1165 + 254)) ]={v37,v288[3]};end v83[ #v83 + (943 -(579 + 363)) ]=v199;break;end if (((3225 -(585 + 70))<(3901 -(686 + 545))) and ((0 + 0)==v287)) then local v339=0;while true do if ((v339==(1 -0)) or (4988<=(4370 + 397))) then v287=(2177 -(401 + 140)) -(1204 + 431) ;break;end if ((v339==(0 -0)) or ((7220 -4166)>(24257 -19392))) then local v351=779 -(476 + 303) ;while true do if ((v351==(115 -(36 + 78))) or ((3535 -2283)>(5789 -(610 + 172 + 316)))) then v339=(349 -(342 + 6)) + 0 ;break;end if (((1993 -(195 + 214))<(4153 -(38 + 106))) and (v351==(0 -0))) then v68=v68 + (153 -(103 + 49)) ;v288=v78[v68];v351=3 -(6 -4) ;end end end end end end break;end if ((v286==(0 + 0)) or ((4718 -(8 + 47))==(3981 -2385))) then v287=1861 -(1335 + 526) ;v288=nil;v286=452 -(307 + 144) ;end end break;end end end v84[v86[1 + 1 ]]=v30(v197,v198,v38);break;end if ((v196==(0 -0)) or ((9477 -5656)<=(3107 -(103 + 709)))) then v197=v79[v86[10 -7 ]];v198=nil;v196=1078 -(194 + 883) ;end end break;end end end elseif (((1862 -(628 + 956))<(12010 -8409)) and (v87<=(1993 -(1726 + 239)))) then if ((v87<=(1771 -(1461 + 284))) or ((9407 -6111)<=(3897 -2863))) then local v155=0 -0 ;local v156;local v157;local v158;while true do if ((v155==1) or ((2066 -1247)>=(518 + 1456))) then v158=nil;while true do if ((v156==(1 + 0)) or ((2524 + 987)<=(3976 -(479 + 900)))) then while true do if (((20 -(4 + 16))==v157) or ((321 + 415)>(4088 -(399 + 404)))) then v158=v86[(5811 -4325) -(657 + 827) ];v84[v158](v13(v84,v158 + 1 + 0 ,v86[1 + 2 ]));break;end end break;end if ((v156==(1378 -(607 + 771))) or ((4258 -2751)>(10136 -5886))) then v157=0 + 0 ;v158=nil;v156=1201 -(522 + 678) ;end end break;end if ((v155==0) or ((4838 -((1340 -(130 + 686)) + 167))==((7575 -(240 + 582)) -4020))) then v156=0 -0 ;v157=nil;v155=(1059 -(477 + 581)) + 0 ;end end elseif ((v87==(919 -(627 + 265))) or (((8254 -(774 + 1222)) -(2340 -(46 + 262)))==(393 -163))) then if ((((325 + 4415) -(5405 -2047))<(3300 -(503 + 559))) and v84[v86[5 -3 ]]) then v68=v68 + 1 + 0 ;else v68=v86[1 + 2 ];end else v84[v86[1736 -(443 + 1291) ]]=v84[v86[6 -3 ]][v84[v86[(31 -22) -5 ]]];end elseif (((3028 + 314)<=4097) and (v87<=(69 -40))) then if ((v84[v86[858 -((1179 -483) + 160) ]]~=v84[v86[951 -(650 + 297) ]]) or (((7788 -(854 + 413)) -(1647 + 225))==(1403 + (3976 -(771 + 35))))) then v68=v68 + (1671 -(610 + 1060)) ;else v68=v86[1 + 2 ];end elseif ((v87>(1611 -((532 -(210 + 231)) + 1490))) or ((5665 -1963)<=(3144 -(365 + 1134)))) then v38[v86[3 + 0 ]]=v84[v86[5 -3 ]];elseif (((1342 + 2281)<=(6408 -(11 + 1536))) and (v84[v86[1 + 1 ]]==v86[2 + (5 -3) ])) then v68=v68 + 1 ;else v68=v86[5 -2 ];end elseif (((4542 -(863 + 89))>(6398 -3479)) and (v87<=36)) then if (((2214 -1733)<(3194 -2544)) and (v87<=(17 + 16))) then if ((v87>(6 + 26)) or ((525 + 156)>=(4448 -(382 + 679)))) then v84[v86[2 -0 ]]=v84[v86[7 -4 ]] -v84[v86[1 + 3 ]] ;else v84[v86[1 + 1 + 0 ]]=v84[v86[3 + 0 ]];end elseif ((v87<=(29 + 5)) or ((677 + 2281 + 1220)>=((9912 -6398) + 982))) then v84[v86[1463 -(766 + 695) ]][v86[1 + 2 ]]=v84[v86[151 -(28 + 119) ]];elseif (((2495 -((699 -353) + 1457))==(2453 -(122 + (1864 -(136 + 89))))) and (v87==35)) then v68=v86[11 -8 ];else v84[v86[(40 -31) -7 ]]= not v84[v86[772 -(304 + 465) ]];end elseif (((3013 -(181 + 282))<=(4695 -(3 + 9 + 1423))) and (v87<=(152 -113))) then if ((v87<=(127 -90)) or ((1047 + (2119 -(1304 + 667)))>=(3474 -1741))) then v84[v86[2 + 0 ]]=v37[v86[1026 -(652 + 371) ]];elseif (((3705 + 1064)>4506) and (v87==(95 -57))) then v84[v86[3 -1 ]]();else local v207=0;local v208;local v209;local v210;local v211;local v212;while true do if ((v207==(725 -((1451 -(341 + 410)) + 23))) or (((21349 -15288) -(554 + 951))==(4861 -(545 + 657)))) then v212=nil;while true do if ((v208==(2 + 0)) or ((1750 -617)==(3760 -1907))) then for v290=v209,v69 do local v291=0 -0 ;local v292;while true do if (((5599 -(1160 + 762))>3374) and (v291==(0 + 0))) then v292=72 -(71 + 1) ;while true do if ((v292==(0 + 0)) or ((2479 + 1113)==(1540 + 1133))) then v212=v212 + (165 -(11 + 153)) ;v84[v290]=v210[v212];break;end end break;end end end break;end if (((1369 -(449 + 919))==v208) or ((4099 -(952 + 384))<=(8157 -5904))) then local v259=1682 -(1452 + 230) ;while true do if ((v259==(1619 -((1558 -1071) + 1132))) or ((5513 -2227)==(529 + 1712))) then v69=(v211 + v209) -(1 -0) ;v212=0 -0 ;v259=2 -1 ;end if ((v259==(1 + 0)) or ((2307 + 971)==(1479 -898))) then v208=(3 -2) + 1 ;break;end end end if (((5638 -3247)>=(823 -361)) and (v208==(0 + 0))) then local v260=0 -0 ;while true do if ((v260==(1706 -(1023 + 683))) or ((110 + 582)>=(3120 -(302 + 167)))) then v209=v86[687 -((779 -274) + 180) ];v210,v211=v81(v84[v209](v84[v209 + (2 -1) ]));v260=615 -(16 + 598) ;end if (((5087 -2117)<=(7770 -4531)) and (v260==(1 + 0))) then v208=1192 -((2229 -(358 + 963)) + 283) ;break;end end end end break;end if (((2290 -((1555 -(352 + 977)) + 1507))==(1627 -(11 + 1059))) and (v207==(3 -2))) then v210=nil;v211=nil;v207=1684 -(672 + 1010) ;end if (((3466 + 190)>((3607 + 235) -(357 + 805))) and (v207==(0 -0))) then v208=1802 -(809 + 993) ;v209=nil;v207=1165 -((1304 -659) + 519) ;end end end elseif (((4261 + 79)>(6484 -3909)) and (v87<=(1499 -(1146 + 313)))) then if ((v84[v86[337 -(29 + 306) ]]==v84[v86[1576 -(441 + 1131) ]]) or ((2528 -(305 + 952 + 45 + 38))==(7490 -3540))) then v68=v68 + ((1 + 3) -3) ;else v68=v86[8 -5 ];end elseif ((v87>(1646 -(1427 + 178))) or ((12170 -7209)==(13220 -8692))) then v84[v86[1699 -(1596 + 101) ]]=v30(v79[v86[(1 + 9) -(1642 -(1051 + 584)) ]],nil,v38);elseif (((1411 + 1126)<(4226 -(141 + 825 + (834 -224)))) and  not v84[v86[1051 -(805 + 244) ]]) then v68=v68 + (1929 -(1423 + 505)) ;else v68=v86[3];end v68=v68 + (993 -(66 + 108 + 818)) ;break;end end break;end end end end A,B=v28(v11(v72));if  not A[1] then local v91=v36[4][v68] or "?" ;error("Script error at ["   .. v91   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end;return v30(v29(),{},v17)(...);end end end vv9(),...);end
